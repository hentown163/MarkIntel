# IMPORTANT: This is a template file for secrets.
# DO NOT commit actual secrets to version control!
# 
# For production, use one of:
# 1. AWS Secrets Manager with External Secrets Operator
# 2. Sealed Secrets
# 3. kubectl create secret from command line
# 4. Helm values override

apiVersion: v1
kind: Secret
metadata:
  name: nexusplanner-secrets
  namespace: nexusplanner
type: Opaque
stringData:
  # Database URL - Replace with actual RDS endpoint
  DATABASE_URL: "postgresql://nexusplanner:CHANGEME@nexusplanner-db.xxxxx.us-east-1.rds.amazonaws.com:5432/nexusplanner"
  
  # JWT Secret - Generate with: openssl rand -hex 32
  JWT_SECRET_KEY: "CHANGEME_GENERATE_SECURE_KEY"
  
  # OpenAI API Key (if using OpenAI provider)
  OPENAI_API_KEY: ""
  
  # AWS Credentials (if not using IAM Roles for Service Accounts - IRSA)
  # Prefer IRSA in production for security
  AWS_ACCESS_KEY_ID: ""
  AWS_SECRET_ACCESS_KEY: ""

---
# Example using External Secrets Operator with AWS Secrets Manager
# Uncomment and configure for production use
#
# apiVersion: external-secrets.io/v1beta1
# kind: SecretStore
# metadata:
#   name: aws-secrets-manager
#   namespace: nexusplanner
# spec:
#   provider:
#     aws:
#       service: SecretsManager
#       region: us-east-1
#       auth:
#         jwt:
#           serviceAccountRef:
#             name: nexusplanner-backend
# ---
# apiVersion: external-secrets.io/v1beta1
# kind: ExternalSecret
# metadata:
#   name: nexusplanner-secrets
#   namespace: nexusplanner
# spec:
#   refreshInterval: 1h
#   secretStoreRef:
#     name: aws-secrets-manager
#     kind: SecretStore
#   target:
#     name: nexusplanner-secrets
#     creationPolicy: Owner
#   data:
#     - secretKey: DATABASE_URL
#       remoteRef:
#         key: nexusplanner/database-url
#     - secretKey: JWT_SECRET_KEY
#       remoteRef:
#         key: nexusplanner/jwt-secret
